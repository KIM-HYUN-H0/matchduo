{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gusgh\\\\project\\\\fullstack\\\\matchduo\\\\pages\\\\main.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from '@material-ui/core/TextField';\nvar top100Films = [{\n  title: '롤',\n  idx: 20\n}, {\n  title: '리그 오브 레전드',\n  idx: 20\n}, {\n  title: 'lol',\n  idx: 20\n}, {\n  title: '피파온라인4',\n  idx: 19\n}, {\n  title: '피파',\n  idx: 19\n}, {\n  title: \"메이플스토리\",\n  idx: 18\n}, {\n  title: '던파',\n  idx: 17\n}, {\n  title: '던전앤파이터',\n  idx: 17\n}];\nvar defaultProps = {\n  options: top100Films,\n  getOptionLabel: function getOptionLabel(option) {\n    return option.title;\n  }\n};\nvar flatProps = {\n  options: top100Films.map(function (option) {\n    return option.title;\n  })\n};\n\nvar Main = function Main() {\n  _s();\n\n  var _useState = useState(),\n      game = _useState[0],\n      setGame = _useState[1];\n\n  var test = function test(e, v) {\n    setGame(v.idx);\n  };\n\n  console.log(game);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, _objectSpread(_objectSpread({}, defaultProps), {}, {\n      id: \"game\",\n      debug: true,\n      onChange: test,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"\\uAC8C\\uC784 \\uCC3E\\uAE30\",\n          margin: \"normal\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this);\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Main, \"pc5hARyxSN6inr2Rb/qqPIg3Ev0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/gusgh/project/fullstack/matchduo/pages/main.tsx"],"names":["React","useState","Autocomplete","TextField","top100Films","title","idx","defaultProps","options","getOptionLabel","option","flatProps","map","Main","game","setGame","test","e","v","console","log","params"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,IAAMC,WAAW,GAAG,CAChB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,GAAG,EAAE;AAAnB,CADgB,EAEhB;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,GAAG,EAAG;AAA5B,CAFgB,EAGhB;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,GAAG,EAAG;AAAtB,CAHgB,EAIhB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,GAAG,EAAG;AAAzB,CAJgB,EAKhB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,GAAG,EAAG;AAArB,CALgB,EAMhB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,GAAG,EAAG;AAAzB,CANgB,EAOhB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,GAAG,EAAG;AAArB,CAPgB,EAQhB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,GAAG,EAAG;AAAzB,CARgB,CAApB;AAWA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAEJ,WADQ;AAEjBK,EAAAA,cAAc,EAAE,wBAACC,MAAD;AAAA,WAAYA,MAAM,CAACL,KAAnB;AAAA;AAFC,CAArB;AAKE,IAAMM,SAAS,GAAG;AAChBH,EAAAA,OAAO,EAAEJ,WAAW,CAACQ,GAAZ,CAAgB,UAACF,MAAD;AAAA,WAAYA,MAAM,CAACL,KAAnB;AAAA,GAAhB;AADO,CAAlB;;AAIF,IAAMQ,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBAESZ,QAAQ,EAFjB;AAAA,MAERa,IAFQ;AAAA,MAEFC,OAFE;;AAIf,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACnBH,IAAAA,OAAO,CAACG,CAAC,CAACZ,GAAH,CAAP;AACH,GAFD;;AAGAa,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEF,sBACE;AAAA,2BACE,QAAC,YAAD,kCACMP,YADN;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,KAAK,MAHP;AAIE,MAAA,QAAQ,EAAES,IAJZ;AAKE,MAAA,WAAW,EAAE,qBAACK,MAAD;AAAA,4BACX,QAAC,SAAD,kCAAeA,MAAf;AACA,UAAA,KAAK,EAAC,2BADN;AAEA,UAAA,MAAM,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA;AALf;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CAzBD;;GAAMR,I;;KAAAA,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst top100Films = [\r\n    { title: '롤', idx: 20 },\r\n    { title: '리그 오브 레전드', idx : 20 },\r\n    { title: 'lol', idx : 20 },\r\n    { title: '피파온라인4', idx : 19 },\r\n    { title: '피파', idx : 19 },\r\n    { title: \"메이플스토리\", idx : 18 },\r\n    { title: '던파', idx : 17 },\r\n    { title: '던전앤파이터', idx : 17 },\r\n  ];\r\n\r\nconst defaultProps = {\r\n    options: top100Films,\r\n    getOptionLabel: (option) => option.title,\r\n  };\r\n\r\n  const flatProps = {\r\n    options: top100Films.map((option) => option.title),\r\n  };\r\n\r\nconst Main = () => {\r\n\r\n    const [game, setGame] = useState();\r\n\r\n    const test = (e, v) => {\r\n        setGame(v.idx);\r\n    }\r\n    console.log(game);\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        {...defaultProps}\r\n        id=\"game\"\r\n        debug\r\n        onChange={test}\r\n        renderInput={(params) => (\r\n          <TextField {...params} \r\n          label=\"게임 찾기\" \r\n          margin=\"normal\" \r\n          />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}