{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gusgh\\\\project\\\\fullstack\\\\matchduo\\\\pages\\\\main.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nvar top100Films = [{\n  title: \"롤\",\n  idx: 20\n}, {\n  title: \"리그 오브 레전드\",\n  idx: 20\n}, {\n  title: \"lol\",\n  idx: 20\n}, {\n  title: \"피파온라인4\",\n  idx: 19\n}, {\n  title: \"피파\",\n  idx: 19\n}, {\n  title: \"메이플스토리\",\n  idx: 18\n}, {\n  title: \"던파\",\n  idx: 17\n}, {\n  title: \"던전앤파이터\",\n  idx: 17\n}];\n\nvar Main = function Main() {\n  _s();\n\n  var _useState = useState(),\n      game = _useState[0],\n      setGame = _useState[1];\n\n  var _useState2 = useState(top100Films),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var test = function test(e, v) {\n    setGame(v.idx);\n  };\n\n  console.log(game);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      id: \"gamesearch\",\n      options: list,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.title;\n      },\n      onChange: test,\n      style: {\n        width: 300\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"\\uAC8C\\uC784 \\uCC3E\\uAE30\",\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Main, \"TInZWBFabJvoD6WJAWP73NWCWxk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/gusgh/project/fullstack/matchduo/pages/main.tsx"],"names":["React","useState","Autocomplete","TextField","top100Films","title","idx","Main","game","setGame","list","setList","test","e","v","console","log","option","width","params"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,IAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,GAAG,EAAE;AAAnB,CADkB,EAElB;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,GAAG,EAAE;AAA3B,CAFkB,EAGlB;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,GAAG,EAAE;AAArB,CAHkB,EAIlB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,GAAG,EAAE;AAAxB,CAJkB,EAKlB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,GAAG,EAAE;AAApB,CALkB,EAMlB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,GAAG,EAAE;AAAxB,CANkB,EAOlB;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,GAAG,EAAE;AAApB,CAPkB,EAQlB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,GAAG,EAAE;AAAxB,CARkB,CAApB;;AAWA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBACON,QAAQ,EADf;AAAA,MACVO,IADU;AAAA,MACJC,OADI;;AAAA,mBAEOR,QAAQ,CAACG,WAAD,CAFf;AAAA,MAEVM,IAFU;AAAA,MAEJC,OAFI;;AAIjB,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACrBL,IAAAA,OAAO,CAACK,CAAC,CAACR,GAAH,CAAP;AACD,GAFD;;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEA,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,OAAO,EAAEE,IAFX;AAGE,MAAA,cAAc,EAAE,wBAACO,MAAD;AAAA,eAAYA,MAAM,CAACZ,KAAnB;AAAA,OAHlB;AAIE,MAAA,QAAQ,EAAEO,IAJZ;AAKE,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OALT;AAME,MAAA,WAAW,EAAE,qBAACC,MAAD;AAAA,4BACX,QAAC,SAAD,kCAAeA,MAAf;AAAuB,UAAA,KAAK,EAAC,2BAA7B;AAAqC,UAAA,OAAO,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA;AANf;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CAvBD;;GAAMZ,I;;KAAAA,I;AAyBN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst top100Films = [\r\n  { title: \"롤\", idx: 20 },\r\n  { title: \"리그 오브 레전드\", idx: 20 },\r\n  { title: \"lol\", idx: 20 },\r\n  { title: \"피파온라인4\", idx: 19 },\r\n  { title: \"피파\", idx: 19 },\r\n  { title: \"메이플스토리\", idx: 18 },\r\n  { title: \"던파\", idx: 17 },\r\n  { title: \"던전앤파이터\", idx: 17 },\r\n];\r\n\r\nconst Main = () => {\r\n  const [game, setGame] = useState();\r\n  const [list, setList] = useState(top100Films);\r\n\r\n  const test = (e, v) => {\r\n    setGame(v.idx);\r\n  };\r\n  console.log(game);\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        id=\"gamesearch\"\r\n        options={list}\r\n        getOptionLabel={(option) => option.title}\r\n        onChange={test}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"게임 찾기\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}